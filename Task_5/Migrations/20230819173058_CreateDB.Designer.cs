// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task_5;

#nullable disable

namespace Task_5.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230819173058_CreateDB")]
    partial class CreateDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task_5.Tables.City", b =>
                {
                    b.Property<int>("cityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cityId"));

                    b.Property<string>("cityName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("cityId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Task_5.Tables.Emp_Trans_Sal", b =>
                {
                    b.Property<int>("emp_trans_salId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("emp_trans_salId"));

                    b.Property<int>("empId")
                        .HasColumnType("int");

                    b.Property<DateTime>("salaryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("emp_trans_salId");

                    b.HasIndex("empId");

                    b.ToTable("EmpTransSalary");
                });

            modelBuilder.Entity("Task_5.Tables.Employee", b =>
                {
                    b.Property<int>("empId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("empId"));

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<int>("cityId")
                        .HasColumnType("int");

                    b.Property<string>("empName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("salary")
                        .HasColumnType("float");

                    b.HasKey("empId");

                    b.HasIndex("cityId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Task_5.Tables.Emp_Trans_Sal", b =>
                {
                    b.HasOne("Task_5.Tables.Employee", "employee")
                        .WithMany("Transactions")
                        .HasForeignKey("empId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("Task_5.Tables.Employee", b =>
                {
                    b.HasOne("Task_5.Tables.City", "city")
                        .WithMany("Employees")
                        .HasForeignKey("cityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("city");
                });

            modelBuilder.Entity("Task_5.Tables.City", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Task_5.Tables.Employee", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
